<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>rooyca</title>
    <link>https://dablog.pages.dev/en/</link>
    <description>Recent content on rooyca</description>
    <generator>Hugo</generator>
    <language>en-US</language>
    <copyright>© [rooyca](https://github.com/rooyca)</copyright>
    <lastBuildDate>Thu, 06 Jun 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://dablog.pages.dev/en/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Migrating from buku to nb with Python</title>
      <link>https://dablog.pages.dev/en/articles/from_buku_to_nb/</link>
      <pubDate>Thu, 06 Jun 2024 00:00:00 +0000</pubDate>
      <guid>https://dablog.pages.dev/en/articles/from_buku_to_nb/</guid>
      <description>&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://www.datanami.com/wp-content/uploads/2020/11/database_migration_shutterstock_hanss.jpg&#34; alt=&#34;img_migration&#34;  /&gt;&#xA;&lt;/p&gt;&#xA;&lt;h2 id=&#34;what-is-buku&#34;&gt;What is buku&lt;/h2&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://img.shields.io/github/stars/jarun/buku&#34; alt=&#34;Stars&#34;  /&gt;&#xA;&#xA;&lt;a href=&#34;https://github.com/jarun/buku/releases/latest&#34;&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://img.shields.io/github/release/jarun/buku.svg?maxAge=600&#34; alt=&#34;Latest release&#34;  /&gt;&#xA;&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/jarun/buku&#34;&gt;buku&lt;/a&gt; is, according to its developers, &amp;ldquo;a powerful bookmark manager and a personal textual mini-web&amp;rdquo;. One of its main strengths is that its records are stored in an SQL database, making searches extremely fast.&lt;/p&gt;&#xA;&lt;h2 id=&#34;what-is-nb&#34;&gt;What is nb&lt;/h2&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://img.shields.io/github/stars/xwmx/nb&#34; alt=&#34;Stars&#34;  /&gt;&#xA;&#xA;&lt;a href=&#34;https://github.com/xwmx/nb/tags&#34;&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://img.shields.io/github/v/tag/xwmx/nb&#34; alt=&#34;Latest release&#34;  /&gt;&#xA;&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/xwmx/nb&#34;&gt;nb&lt;/a&gt; is, according to its GitHub description, a &amp;ldquo;CLI and local web plain text note‑taking, bookmarking, and archiving with linking, tagging, filtering, search, Git versioning &amp;amp; syncing, Pandoc conversion, + more, in a single portable script&amp;rdquo;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>HTTP request from Obsidian notes</title>
      <link>https://dablog.pages.dev/en/articles/http_request_from_obsidian/</link>
      <pubDate>Sun, 02 Jun 2024 00:00:00 +0000</pubDate>
      <guid>https://dablog.pages.dev/en/articles/http_request_from_obsidian/</guid>
      <description>&lt;p&gt;Are you an &lt;a href=&#34;https://obsidian.md/&#34;&gt;Obsidian&lt;/a&gt; user looking to elevate your note-taking experience with dynamic data integration? Look no further than APIR (&lt;a href=&#34;https://rooyca.github.io/obsidian-api-request/&#34;&gt;api-request&lt;/a&gt;) – an Obsidian plugin designed to streamline HTTP requests directly into your notes.&lt;/p&gt;&#xA;&lt;h2 id=&#34;-how-to-use&#34;&gt;⚡ How to Use&lt;/h2&gt;&#xA;&lt;p&gt;With APIR, integrating HTTP requests into your notes is a breeze. Simply create a code-block within your note, specifying the language as &lt;code&gt;req&lt;/code&gt;. Inside this code-block, customize parameters such as URL, method, body, headers, and more to tailor your request precisely to your needs.&lt;/p&gt;</description>
    </item>
    <item>
      <title>MarkUP - Share your Markdown</title>
      <link>https://dablog.pages.dev/en/projects/markup/</link>
      <pubDate>Fri, 07 Jul 2023 00:00:00 +0000</pubDate>
      <guid>https://dablog.pages.dev/en/projects/markup/</guid>
      <description></description>
    </item>
    <item>
      <title>rooykup-cli - Backups commpressed and encrypted</title>
      <link>https://dablog.pages.dev/en/projects/rooykup/</link>
      <pubDate>Tue, 16 May 2023 00:00:00 +0000</pubDate>
      <guid>https://dablog.pages.dev/en/projects/rooykup/</guid>
      <description></description>
    </item>
    <item>
      <title>API Request - Obsidian Plugin</title>
      <link>https://dablog.pages.dev/en/projects/api_request_obsidian_plugin_n/</link>
      <pubDate>Tue, 02 May 2023 00:00:00 +0000</pubDate>
      <guid>https://dablog.pages.dev/en/projects/api_request_obsidian_plugin_n/</guid>
      <description></description>
    </item>
    <item>
      <title>MiLibre - Personal Library</title>
      <link>https://dablog.pages.dev/en/projects/milibre_personal_library_n/</link>
      <pubDate>Sun, 09 Apr 2023 00:00:00 +0000</pubDate>
      <guid>https://dablog.pages.dev/en/projects/milibre_personal_library_n/</guid>
      <description></description>
    </item>
    <item>
      <title>Create a 100% free online radio station - Radio Project (Part 1)</title>
      <link>https://dablog.pages.dev/en/articles/_radio_project_part_one/</link>
      <pubDate>Mon, 03 Apr 2023 00:00:00 +0000</pubDate>
      <guid>https://dablog.pages.dev/en/articles/_radio_project_part_one/</guid>
      <description>&lt;h1 id=&#34;welcome-to-radio-project&#34;&gt;Welcome to Radio Project&lt;/h1&gt;&#xA;&lt;p&gt;Today I want to start a series of posts in which we will learn together the steps to follow when creating an online radio station. At first, when I started this project I found several platforms that offered this service for free, but the vast majority of pages were paid and others had aged quite badly. But one day I found &lt;a href=&#34;https://zeno.fm&#34;&gt;&lt;strong&gt;ZenoRadio&lt;/strong&gt;&lt;/a&gt; (NO ADVERTISING, it really is a good platform), a modern alternative and with a very generous free plan.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Obsidian Highligter - Firefox Extention</title>
      <link>https://dablog.pages.dev/en/projects/highlighter_obsidian_n/</link>
      <pubDate>Sun, 02 Apr 2023 00:00:00 +0000</pubDate>
      <guid>https://dablog.pages.dev/en/projects/highlighter_obsidian_n/</guid>
      <description></description>
    </item>
    <item>
      <title>Send emails from Gmail using your own domain</title>
      <link>https://dablog.pages.dev/en/articles/send_emails_from_own_domain_with_gmail/</link>
      <pubDate>Sat, 09 Jul 2022 00:00:00 +0000</pubDate>
      <guid>https://dablog.pages.dev/en/articles/send_emails_from_own_domain_with_gmail/</guid>
      <description>&lt;h1 id=&#34;1---redirecting-traffic&#34;&gt;1 - Redirecting Traffic&lt;/h1&gt;&#xA;&lt;p&gt;The first thing to do is to redirect the traffic from our email account (in this case &lt;a href=&#34;mailto:me@rooyca.xyz&#34;&gt;me@rooyca.xyz&lt;/a&gt;) to Gmail. To do this we go to our domain provider or our CDN of choice, in my case CloudFlare. Now we go to the &lt;em&gt;Email&lt;/em&gt; &amp;gt; &lt;em&gt;Routes&lt;/em&gt; &amp;gt; &lt;em&gt;Create address&lt;/em&gt;.&lt;/p&gt;&#xA;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://res.cloudinary.com/rooyca/image/upload/c_scale,w_972/v1657979535/Blog/Imgs/domain-gmail/13_fmzgzs.png&#34; alt=&#34;Create account&#34;  /&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;We create our address pointing to the Gmail with which we are going to configure our account.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Hosting WordPress in the cloud (Google Cloud)</title>
      <link>https://dablog.pages.dev/en/articles/wordpress_cloud/</link>
      <pubDate>Fri, 01 Jul 2022 00:00:00 +0000</pubDate>
      <guid>https://dablog.pages.dev/en/articles/wordpress_cloud/</guid>
      <description>&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://upload.wikimedia.org/wikipedia/commons/2/20/WordPress_logo.svg&#34; alt=&#34;Wordpress&#34;  /&gt;&#xA;&lt;/p&gt;&#xA;&lt;h1 id=&#34;creating-the-virtual-machine&#34;&gt;Creating the Virtual Machine&lt;/h1&gt;&#xA;&lt;p&gt;&amp;ldquo;WordPress is a content management system released on May 27, 2003, focused on the creation of any type of website.&amp;rdquo; According to these twenty &lt;a href=&#34;https://blog.hubspot.com/website/wordpress-stats#:~:text=%28W3Techs%2C%20202022%29,every%20five%20websites%20use%20WordPress.&#34;&gt;statistics&lt;/a&gt; about WordPress by 2022 we find that WordPress is used by 43.2% of all sites on the Internet.&lt;/p&gt;&#xA;&lt;p&gt;In order to run WordPress on Google Cloud (GCloud from now on), we must first create a virtual machine with one of the images that GCloud has. To do this we go to the top left, click on &amp;ldquo;More Products&amp;rdquo; and look for &amp;ldquo;Marketplace&amp;rdquo;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Finance - Simple finances app</title>
      <link>https://dablog.pages.dev/en/projects/finance/</link>
      <pubDate>Wed, 15 Jun 2022 00:00:00 +0000</pubDate>
      <guid>https://dablog.pages.dev/en/projects/finance/</guid>
      <description></description>
    </item>
    <item>
      <title>PDF2Slide - A lightweight PDF reader</title>
      <link>https://dablog.pages.dev/en/projects/portfolio_ankla/</link>
      <pubDate>Wed, 15 Jun 2022 00:00:00 +0000</pubDate>
      <guid>https://dablog.pages.dev/en/projects/portfolio_ankla/</guid>
      <description></description>
    </item>
    <item>
      <title>How to extract the complete works of Shakespeare from an image</title>
      <link>https://dablog.pages.dev/en/articles/basic_steganography/</link>
      <pubDate>Thu, 23 Sep 2021 00:00:00 +0000</pubDate>
      <guid>https://dablog.pages.dev/en/articles/basic_steganography/</guid>
      <description>&lt;h1 id=&#34;steganography&#34;&gt;Steganography&lt;/h1&gt;&#xA;&lt;h2 id=&#34;what-is-it&#34;&gt;What is it?&lt;/h2&gt;&#xA;&lt;p&gt;Unlike cryptography, where it is obvious that something is being hidden, steganography hides information in such a way that no suspicions are raised that something is hidden. This is achieved by means of different techniques that allow us to hide files, images, texts or even videos inside other files.&lt;/p&gt;&#xA;&lt;h2 id=&#34;how-does-it-work&#34;&gt;How does it work?&lt;/h2&gt;&#xA;&lt;p&gt;There are different techniques to hide information inside files. One of the most commonly used and perhaps the easiest to understand is commonly known as the &amp;ldquo;Least Significant Bit Technique&amp;rdquo; or LSB.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Create your first API with Flask</title>
      <link>https://dablog.pages.dev/en/articles/flask_basic_api/</link>
      <pubDate>Tue, 21 Sep 2021 00:00:00 +0000</pubDate>
      <guid>https://dablog.pages.dev/en/articles/flask_basic_api/</guid>
      <description>&lt;p&gt;First of all, here is the &lt;a href=&#34;https://github.com/Rooyca/API-LoRFinder&#34;&gt;link&lt;/a&gt; in case you want to clone directly the Github repository.&lt;/p&gt;&#xA;&lt;h1 id=&#34;developing-our-api&#34;&gt;Developing our API&lt;/h1&gt;&#xA;&lt;p&gt;For this tutorial we are going to use mainly the &amp;ldquo;Mini&amp;rdquo;-Framework Flask and some extensions of it. For the installation of all the packages I would like to leave you with two options:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Install the following packages with the &lt;code&gt;pip install x-package&lt;/code&gt; command.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;flask&lt;/li&gt;&#xA;&lt;li&gt;flask_restful&lt;/li&gt;&#xA;&lt;li&gt;flask_sqlalchemy&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;ol start=&#34;2&#34;&gt;&#xA;&lt;li&gt;Download the file &lt;a href=&#34;https://github.com/Rooyca/API-LoRFinder/blob/main/requirements.txt&#34;&gt;&lt;code&gt;requirements.txt&lt;/code&gt;&lt;/a&gt; and install everything at once with the command &lt;code&gt;pip install -r requirements.txt&lt;/code&gt;.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;The first option allows us to familiarize ourselves little by little with the tools that we are going to use throughout this tutorial and the second one speeds up the work.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Creating our own commands in Linux | Alias</title>
      <link>https://dablog.pages.dev/en/articles/linux_comands/</link>
      <pubDate>Mon, 20 Sep 2021 00:00:00 +0000</pubDate>
      <guid>https://dablog.pages.dev/en/articles/linux_comands/</guid>
      <description>&lt;h1 id=&#34;creating-our-aliases&#34;&gt;Creating our Aliases&lt;/h1&gt;&#xA;&lt;p&gt;Alias is a simple way to map, bin, join(?) commands. This is the best way to save time when typing long strings of commands. If we type &amp;ldquo;aliases&amp;rdquo; in our terminal we should get the default aliases of our system, something like this:&#xA;&lt;img loading=&#34;lazy&#34; src=&#34;https://res.cloudinary.com/rooyca/image/upload/v1632189896/Blog/Imgs/Commands-Linux/alias-predeterminados_lhjdfr.png&#34; alt=&#34;ALIASES-DEFAULT&#34;  /&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;As you may notice, in my case I have two custom aliases: &lt;strong&gt;price&lt;/strong&gt; and &lt;strong&gt;subl&lt;/strong&gt;; the first one is a python script I use to see the crypto market behavior and the second one is simply to open SublimeText.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
